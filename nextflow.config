manifest {
	mainScript = "main.nf"
	defaultBranch = "master"
	nextflowVersion = ">=19.04.0"
}



params {
	conda_env = "gemprep"

	input {
		dir = "input"
		fpkm_txt = "*.fpkm.txt"
		raw_txt = "*.raw.txt"
		tpm_txt = "*.tpm.txt"
		emx_txt = "*.emx.txt"
	}

	output {
		dir = "output"
	}

	convert_txt_npy {
		enabled = true
	}

	normalize {
		enabled = true
		np = 8
		log2 = true
		kstest = true
		quantile_py = false
		quantile_r = true
	}

	visualize {
		enabled = true
		density = true
		tsne = true
		tsne_na = -1000
		tsne_npca = 50
	}

	partition {
		enabled = true
		num_partitions = 10
		method = "random"
	}
}



report {
	enabled = true
	file = "${params.output.dir}/reports/report.html"
}



timeline {
	enabled = true
	file = "${params.output.dir}/reports/timeline.html"
}



trace {
	enabled = true
	fields = "task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes"
	file = "${params.output.dir}/reports/trace.txt"
	raw = true
}



docker {
	runOptions = "--init --runtime=nvidia"
}



singularity {
	runOptions = "--nv"
	autoMounts = true
	cacheDir = "work-singularity"
}



process {
	beforeScript = "source activate ${params.conda_env}"
	container = "systemsgenetics/gemprep"
	echo = false
}



profiles {
	standard {
		process {
			executor = "local"
			cpus = 1
			memory = "8 GB"

			withName:normalize {
				cpus = "${params.normalize.np}"
				memory = "32 GB"
			}
		}
	}

	pbs {
		process {
			executor = "pbspro"
			cpus = 1
			memory = "8 GB"

			module = "anaconda3"

			withName:normalize {
				time = "72h"
				cpus = 1
				memory = "16 GB"
				clusterOptions = "-l select=${params.normalize.np}:mpiprocs=1:interconnect=fdr"
			}
		}
	}
}
